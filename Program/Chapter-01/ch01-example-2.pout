>>> #====================================
... # (1) Reading Data 
... #====================================
... x = [1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
...      1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
...      1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
...      2009, 2010, 2011, 2012, 2013, 2014, 2015]
>>> y = [7.22, 7.86, 7.25, 7.45, 7.54, 7.11, 6.93, 7.55, 7.51, 7.53,
...      7.08, 6.27, 6.59, 7.59, 6.54, 7.24, 6.18, 7.91, 6.78, 6.62,
...      6.29, 6.36, 6.78, 5.98, 6.18, 6.08, 5.59, 5.95, 4.32, 4.73,
...      5.39, 4.93, 4.63, 3.63, 5.35, 5.29, 4.68]
>>> 
>>> #====================================
... # (2) Scatter plot
... #====================================
... import matplotlib.pyplot as plot # https://matplotlib.org/
>>> import numpy as np            # https://www.numpy.org
>>> year = np.array(x).reshape((-1,1))
>>> area = np.array(y).reshape((-1,1))
>>> 
>>> plot.figure( figsize=(10,10) )
<matplotlib.figure.Figure object at 0x7fec71fa7860>
>>> plot.scatter(year, area, c="black" )
<matplotlib.collections.PathCollection object at 0x7fec51acf518>
>>> plot.show()
>>> 
>>> #====================================
... # (3) Parameter estimation
... #====================================
... # https://www.statsmodels.org
... # Windows10: C:\> pip install -U statsmodels --user
... from statsmodels.formula.api import ols
>>> from statsmodels.stats.anova import anova_lm
>>> import pandas   # https://pandas.pydata.org
>>> 
>>> # This data structure is needed for  ols and anova_lm
... data = pandas.DataFrame({"year": x, "area": y})
>>> model = ols("area~year", data=data) # NB: ols("y~0+x", data)
>>> OUT = model.fit()
>>> print(OUT.summary())
                            OLS Regression Results                            
==============================================================================
Dep. Variable:                   area   R-squared:                       0.742
Model:                            OLS   Adj. R-squared:                  0.734
Method:                 Least Squares   F-statistic:                     100.5
Date:                Wed, 26 Jun 2019   Prob (F-statistic):           7.97e-12
Time:                        19:27:27   Log-Likelihood:                -30.399
No. Observations:                  37   AIC:                             64.80
Df Residuals:                      35   BIC:                             68.02
Df Model:                           1                                         
Covariance Type:            nonrobust                                         
==============================================================================
                 coef    std err          t      P>|t|      [0.025      0.975]
------------------------------------------------------------------------------
Intercept    180.7290     17.397     10.389      0.000     145.411     216.047
year          -0.0873      0.009    -10.024      0.000      -0.105      -0.070
==============================================================================
Omnibus:                        1.794   Durbin-Watson:                   1.739
Prob(Omnibus):                  0.408   Jarque-Bera (JB):                0.811
Skew:                          -0.133   Prob(JB):                        0.667
Kurtosis:                       3.675   Cond. No.                     3.74e+05
==============================================================================

Warnings:
[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.
[2] The condition number is large, 3.74e+05. This might indicate that there are
strong multicollinearity or other numerical problems.
>>> 
>>> # NB: Compare the following
... # ols("area~year", data).fit().summary()
... # ols("area~0+year", data).fit().summary()
... 
>>> print(anova_lm(OUT))
            df     sum_sq    mean_sq           F        PR(>F)
year       1.0  32.162073  32.162073  100.475221  7.967937e-12
Residual  35.0  11.203484   0.320100         NaN           NaN
>>> 
>>> 
>>> #------------------------------------------
... # Scatter plot with the fitted line
... #------------------------------------------
... plot.figure( figsize=(10,10) )
<matplotlib.figure.Figure object at 0x7fec2e7a1be0>
>>> plot.scatter(year, area, c="black" )
<matplotlib.collections.PathCollection object at 0x7fec2e744eb8>
>>> plot.plot(year, OUT.fittedvalues, c="red", linewidth=1 )
[<matplotlib.lines.Line2D object at 0x7fec2e798cf8>]
>>> plot.xlabel("Year")
<matplotlib.text.Text object at 0x7fec2e73ff60>
>>> plot.ylabel("Extended area")
<matplotlib.text.Text object at 0x7fec2e74c668>
>>> plot.show()
>>> 
>>> #====================================
... # (4) To compare with the paper
... #====================================
... # NB: Shorten the data by slicing.
... #    (it starts with zero and ends with 34).
... data2 = pandas.DataFrame({"yr": x[0:34], "ar": y[0:34]})
>>> model2 = ols("ar~yr", data=data2) # NB: ols("y~0+x", data)
>>> OUT2 = model2.fit()
>>> print(OUT2.summary())
                            OLS Regression Results                            
==============================================================================
Dep. Variable:                     ar   R-squared:                       0.717
Model:                            OLS   Adj. R-squared:                  0.708
Method:                 Least Squares   F-statistic:                     80.88
Date:                Wed, 26 Jun 2019   Prob (F-statistic):           2.85e-10
Time:                        19:27:36   Log-Likelihood:                -28.729
No. Observations:                  34   AIC:                             61.46
Df Residuals:                      32   BIC:                             64.51
Df Model:                           1                                         
Covariance Type:            nonrobust                                         
==============================================================================
                 coef    std err          t      P>|t|      [0.025      0.975]
------------------------------------------------------------------------------
Intercept    188.6024     20.254      9.312      0.000     147.347     229.858
yr            -0.0913      0.010     -8.993      0.000      -0.112      -0.071
==============================================================================
Omnibus:                        0.986   Durbin-Watson:                   1.477
Prob(Omnibus):                  0.611   Jarque-Bera (JB):                0.228
Skew:                           0.032   Prob(JB):                        0.892
Kurtosis:                       3.396   Cond. No.                     4.06e+05
==============================================================================

Warnings:
[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.
[2] The condition number is large, 4.06e+05. This might indicate that there are
strong multicollinearity or other numerical problems.
>>> print(anova_lm(OUT2))
            df     sum_sq    mean_sq          F        PR(>F)
yr         1.0  27.264989  27.264989  80.877733  2.845158e-10
Residual  32.0  10.787637   0.337114        NaN           NaN
>>> 
>>> #------------------------------------------
... # Scatter plot with the fitted line
... #------------------------------------------
... yr = year[0:34] # NB: slicing (takes 34 observations)
>>> ar = area[0:34] # NB: it starts with zero and ends with 34.
>>> plot.figure( figsize=(10,10) )
<matplotlib.figure.Figure object at 0x7fec2e2c5dd8>
>>> plot.scatter(yr, ar, c="black" )
<matplotlib.collections.PathCollection object at 0x7fec2de5b780>
>>> plot.plot(yr, OUT2.fittedvalues, c="red", linewidth=1 )
[<matplotlib.lines.Line2D object at 0x7fec2de61358>]
>>> plot.xlabel("Year")
<matplotlib.text.Text object at 0x7fec2e2e0198>
>>> plot.ylabel("Extended area")
<matplotlib.text.Text object at 0x7fec2e2e7860>
>>> plot.show()

