> #====================================
> # (1) Reading Data 
> #====================================
> 
> # -----------------------------------
> # Write the data into C1 and C2 variables directly.
> # -----------------------------------
> x1 = c(80, 30, 50, 90, 70, 60,120, 80,100, 50,
+        40, 70, 90, 20,110,100, 30, 50, 90,110,
+        30, 90, 40, 80, 70)
> y1 = c(399,121,221,376,361,224,546,352,353,157,
+        160,252,389,113,435,420,212,268,377,421,
+        273,468,244,342,323)
> 
> # -----------------------------------
> # From Hard disc
> # -----------------------------------
> # Note: use ANSI ascii text file. UTF-8 text is not supported.
>  mydata = read.table("S:/data/CH01TA01.txt")
> 
> # The above is the same as:
> # setwd("S:/data")
> # mydata = read.table("CH01TA01.txt")
> 
> # Double-check if they are read well
> x2 = mydata[,1]
> y2 = mydata[,2]
> cbind(x2,y2)
       x2  y2
 [1,]  80 399
 [2,]  30 121
 [3,]  50 221
 [4,]  90 376
 [5,]  70 361
 [6,]  60 224
 [7,] 120 546
 [8,]  80 352
 [9,] 100 353
[10,]  50 157
[11,]  40 160
[12,]  70 252
[13,]  90 389
[14,]  20 113
[15,] 110 435
[16,] 100 420
[17,]  30 212
[18,]  50 268
[19,]  90 377
[20,] 110 421
[21,]  30 273
[22,]  90 468
[23,]  40 244
[24,]  80 342
[25,]  70 323
> 
> # -----------------------------------
> # From URL
> # -----------------------------------
> # See the URL: https://github.com/AppliedStat/LM
> # If your computer is connected to Internet, then the following should work:
> url = "https://raw.githubusercontent.com/AppliedStat/LM/master/CH01TA01.txt"
> mydata = read.table(url)
> 
> # Check below
> # is.matrix(mydata)
> #   is.list(mydata)
> # as.matrix(mydata)
> 
> # Double-check if they are read well
> x3 = mydata[,1]
> y3 = mydata[,2]
> cbind(x3,y3)
       x3  y3
 [1,]  80 399
 [2,]  30 121
 [3,]  50 221
 [4,]  90 376
 [5,]  70 361
 [6,]  60 224
 [7,] 120 546
 [8,]  80 352
 [9,] 100 353
[10,]  50 157
[11,]  40 160
[12,]  70 252
[13,]  90 389
[14,]  20 113
[15,] 110 435
[16,] 100 420
[17,]  30 212
[18,]  50 268
[19,]  90 377
[20,] 110 421
[21,]  30 273
[22,]  90 468
[23,]  40 244
[24,]  80 342
[25,]  70 323
> 
> # -----------------------------------
> # For convenience,
> # -----------------------------------
> x = x1
> y = y1
> 
> #====================================
> # (2) Scatter plot
> #====================================
> # ?Devices
> # postscript( "ex1.ps", width=4, height=4 )
> # pdf(file="ex1.pdf", width=4, height=4 )
> plot(x,y)
> dev.off()
null device 
          1 
> 
> # plot with text is optional in R
> # It may need to install txtplot package
> # install.packages("txtplot")
> library("txtplot")
> txtplot(x,y)
    +-+---------+---------+---------+---------+--------+---+
    |                                                  *   |
500 +                                                      +
    |                                    *                 |
    |                                         *    *       |
400 +                               *    *                 +
    |                          *    *         *            |
300 +                          *                           +
    |      *         *                                     |
    |           *    *    *    *                           |
200 +      *                                               +
    |           *    *                                     |
    | *    *                                               |
100 +-+---------+---------+---------+---------+--------+---+
     20        40        60        80        100      120   
> 
> #====================================
> # (3) Parameter estimation
> #====================================
> lm( y ~ x)

Call:
lm(formula = y ~ x)

Coefficients:
(Intercept)            x  
      62.37         3.57  

> output = lm (y ~ x)
> summary(output)

Call:
lm(formula = y ~ x)

Residuals:
    Min      1Q  Median      3Q     Max 
-83.876 -34.088  -5.982  38.826 103.528 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   62.366     26.177   2.382   0.0259 *  
x              3.570      0.347  10.290 4.45e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 48.82 on 23 degrees of freedom
Multiple R-squared:  0.8215,	Adjusted R-squared:  0.8138 
F-statistic: 105.9 on 1 and 23 DF,  p-value: 4.449e-10

> anova(output)
Analysis of Variance Table

Response: y
          Df Sum Sq Mean Sq F value    Pr(>F)    
x          1 252378  252378  105.88 4.449e-10 ***
Residuals 23  54825    2384                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> #====================================
> # (4) Some Math
> #====================================
> # To compare with Minitab codes
> # NB: Cx (x=1,2,..) are variables in Minitab
> C2 = y   # copy of y to C2
> C1 = x
> 
> C3 = fitted(output)
> 
> C4 = C2 - C3
> C5 = C4^2
> 
> cbind(C1, C2, C3, C4, C5)
    C1  C2       C3          C4           C5
1   80 399 347.9820  51.0179798 2.602834e+03
2   30 121 169.4719 -48.4719192 2.349527e+03
3   50 221 240.8760 -19.8759596 3.950538e+02
4   90 376 383.6840  -7.6840404 5.904448e+01
5   70 361 312.2800  48.7200000 2.373638e+03
6   60 224 276.5780 -52.5779798 2.764444e+03
7  120 546 490.7901  55.2098990 3.048133e+03
8   80 352 347.9820   4.0179798 1.614416e+01
9  100 353 419.3861 -66.3860606 4.407109e+03
10  50 157 240.8760 -83.8759596 7.035177e+03
11  40 160 205.1739 -45.1739394 2.040685e+03
12  70 252 312.2800 -60.2800000 3.633678e+03
13  90 389 383.6840   5.3159596 2.825943e+01
14  20 113 133.7699 -20.7698990 4.313887e+02
15 110 435 455.0881 -20.0880808 4.035310e+02
16 100 420 419.3861   0.6139394 3.769216e-01
17  30 212 169.4719  42.5280808 1.808638e+03
18  50 268 240.8760  27.1240404 7.357136e+02
19  90 377 383.6840  -6.6840404 4.467640e+01
20 110 421 455.0881 -34.0880808 1.161997e+03
21  30 273 169.4719 103.5280808 1.071806e+04
22  90 468 383.6840  84.3159596 7.109181e+03
23  40 244 205.1739  38.8260606 1.507463e+03
24  80 342 347.9820  -5.9820202 3.578457e+01
25  70 323 312.2800  10.7200000 1.149184e+02
> 
> C11 = sum(C4)
> C12 = sum(C2)
> C13 = sum(C3)
> C14 = C1*C4
> C15 = C3*C4
> C16 = C2*C4
> C14 = sum(C14)
> C15 = sum(C15)
> C16 = sum(C16)
> C17 = sum(C5)
> cbind(C11, C12, C13, C14, C15, C16, C17)
              C11  C12  C13          C14          C15      C16      C17
[1,] 2.273737e-13 7807 7807 1.921308e-11 7.958079e-11 54825.46 54825.46
> 
> # MSE
> sum(C5) / (25-2)
[1] 2383.716
> sum ( (y-fitted(output))^2 ) / (25-2)
[1] 2383.716
